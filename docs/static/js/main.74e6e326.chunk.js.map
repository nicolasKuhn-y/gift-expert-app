{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifts.js","components/GiftGridItem.jsx","components/GiftGridDisplayer.jsx","hooks/useFetchGifts.js","pages/GiftExpertApp.jsx","index.js"],"names":["AddCategory","setCategory","useState","newCategory","setNewCategory","onSubmit","e","preventDefault","trim","length","prev","type","value","onChange","target","getGiftsFromGiphy","category","a","url","encodeURI","fetch","res","json","data","map","img","id","title","images","downsized_large","GiftGridItem","className","src","alt","GiftGridDisplayer","categorie","isLoading","gift","setGift","useEffect","then","imgs","useFetchGifts","generateGridItem","GiftExpertApp","categories","setCategories","generateGrid","index","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC5B,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAaA,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAYK,OAAOC,OAAS,IAC9BR,GAAY,SAACS,GAAD,OAAWP,GAAX,mBAA2BO,OACvCN,EAAe,MAKjB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAaU,SAbvB,SAACP,GAAD,OAAOF,EAAeE,EAAEQ,OAAOF,a,+BCJxCG,EAAiB,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACzBC,EADyB,iDACuBC,UAAUH,GADjC,6BAFjB,oCAEiB,SAEbI,MAAMF,GAFO,cAEzBG,EAFyB,gBAGRA,EAAIC,OAHI,uBAGvBC,EAHuB,EAGvBA,KAHuB,kBAKxBA,EAAKC,KAAI,SAACC,GAAD,MAAU,CACxBC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,gBAAgBX,SARH,2CAAH,sDCCjBY,EAAe,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IACpC,OACE,sBAAKa,UAAU,2CAAf,UAEE,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,mBAAGI,UAAU,UAAb,SAAwBJ,QCHjBO,EAAoB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAClC,ECH2B,SAACA,GAC5B,MAAwBjC,mBAAS,CAC/BqB,KAAM,GACNa,WAAW,IAFb,mBAAOC,EAAP,KAAaC,EAAb,KAcA,OATAC,qBAAU,WACRxB,EAAkBoB,GAAWK,MAAK,SAACC,GAAD,OAChCH,EAAQ,CACNf,KAAMkB,EACNL,WAAW,SAGd,CAACD,IAEGE,EDZ6BK,CAAcP,GAApCP,EAAd,EAAQL,KAAca,EAAtB,EAAsBA,UAEhBO,EAAmBf,EAAOJ,KAAI,SAACC,GAAD,OAClC,cAAC,EAAD,eAA+BA,GAAZA,EAAIC,OAGzB,OACE,qCACE,oBAAIK,UAAU,kBAAd,SAAiCI,IAEhCC,GAAa,6CAEd,qBAAKL,UAAU,sBAAf,SAAsCY,QEf/BC,EAAgB,WAC3B,MAAoC1C,mBAAS,IAA7C,mBAAO2C,EAAP,KAAmBC,EAAnB,KAEMC,EAAeF,EAAWrB,KAAI,SAACR,EAAUgC,GAAX,OAClC,cAAC,EAAD,CAA+Bb,UAAWnB,GAAlBgC,MAG1B,OACE,uBAAMjB,UAAU,OAAhB,UACE,yBAASA,UAAU,wBAAnB,SACE,sBAAKA,UAAU,eAAf,UACE,+CACA,cAAC,EAAD,CAAa9B,YAAa6C,SAI9B,6BAAKC,Q,MCfXE,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.74e6e326.chunk.js","sourcesContent":["import { React, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategory }) => {\r\n  const [newCategory, setNewCategory] = useState(\"\");\r\n\r\n  const handleInput = (e) => setNewCategory(e.target.value);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (newCategory.trim().length > 2) {\r\n      setCategory((prev) => [newCategory, ...prev]);\r\n      setNewCategory(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={newCategory} onChange={handleInput} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategory: PropTypes.func.isRequired,\r\n};\r\n","const API_KEY = \"59vCqbdbVzjPTDnePiRxkEVD7AeE1kBx\";\r\n\r\nexport const getGiftsFromGiphy = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${API_KEY}`;\r\n  const res = await fetch(url);\r\n  const { data } = await res.json();\r\n\r\n  return data.map((img) => ({\r\n    id: img.id,\r\n    title: img.title,\r\n    url: img.images.downsized_large.url,\r\n  }));\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const GiftGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInUp\">\r\n      \r\n      <img src={url} alt={title} />\r\n      <p className=\"card__p\">{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nGiftGridItem.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\n\r\nimport { useFetchGifts } from \"../hooks/useFetchGifts\";\r\nimport { GiftGridItem } from \"./GiftGridItem\";\r\n\r\nexport const GiftGridDisplayer = ({ categorie }) => {\r\n  const { data: images, isLoading } = useFetchGifts(categorie);\r\n\r\n  const generateGridItem = images.map((img) => (\r\n    <GiftGridItem key={img.id} {...img} />\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"categorie-title\">{categorie}</h3>\r\n\r\n      {isLoading && <p> Cargando...</p>}\r\n\r\n      <div className=\"grid-imgs-container\">{generateGridItem}</div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGiftsFromGiphy } from \"../helpers/getGifts\";\r\n\r\nexport const useFetchGifts = (categorie) => {\r\n  const [gift, setGift] = useState({\r\n    data: [],\r\n    isLoading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGiftsFromGiphy(categorie).then((imgs) =>\r\n      setGift({\r\n        data: imgs,\r\n        isLoading: false,\r\n      })\r\n    );\r\n  }, [categorie]);\r\n\r\n  return gift;\r\n};\r\n","import { React, useState } from \"react\";\r\nimport { AddCategory } from \"../components/AddCategory\";\r\nimport { GiftGridDisplayer } from \"../components/GiftGridDisplayer\";\r\nexport const GiftExpertApp = () => {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const generateGrid = categories.map((category, index) => (\r\n    <GiftGridDisplayer key={index} categorie={category} />\r\n  ));\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <section className=\"addCategory-container\">\r\n        <div className=\"form-wrapper\">\r\n          <h2>GiftExpertApp</h2>\r\n          <AddCategory setCategory={setCategories} />\r\n        </div>\r\n        \r\n      </section>\r\n      <ul>{generateGrid}</ul>\r\n    </main>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GiftExpertApp } from \"./pages/GiftExpertApp\";\nimport \"./index.css\";\nReactDOM.render(\n  <>\n    <GiftExpertApp />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}